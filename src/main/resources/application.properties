# Database do Postgresql
# spring.datasource.url = jdbc:postgresql://localhost:5432/Teste
# spring.datasource.username = postgres
# spring.datasource.password = 123456

# ElephantSQL - Teste
# URL structure => postgres://username:password@hostname/databasename
# spring.datasource.url = jdbc:postgresql://silly.db.elephantsql.com/svmlgiwa
# spring.datasource.username = svmlgiwa
# spring.datasource.password = oxvUltJIpJ1dPr3nMhKFMa4_JpaecRzG

# ElephantSQL - TesteDois
# URL structure => postgres://username:password@hostname/databasename
spring.datasource.url = jdbc:postgresql://silly.db.elephantsql.com/pbnuamcd
spring.datasource.username = pbnuamcd
spring.datasource.password = azz81veY3rNtI6oTm5tmU6-AfHmTI_sx
spring.datasource.hikari.maximum-pool-size = 1

# Liquibase
# Onde esta o arquivo de configuração do liquibase
# spring.liquibase.change-log=liquibase/master.xml
# spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml

# Cria automaticamente as tabelas mapeadas na pasta MODEL
spring.jpa.hibernate.ddl-auto = update

#  Performance 
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true